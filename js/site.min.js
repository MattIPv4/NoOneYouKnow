function generateCard(image,title,info,link,linkLabel){var card=document.createElement("div");card.className="card";if(typeof image==="string"&&image.length){if(typeof link==="string"&&link.length){var cover=document.createElement("a");cover.target="_blank";cover.href=link.toString()}else{var cover=document.createElement("div")}cover.className="image";cover.style.backgroundImage='url("'+image+'")';card.appendChild(cover)}if(typeof title==="string"&&title.length||typeof info==="string"&&info.length){var h4=document.createElement("h4");if(typeof title==="string"&&title.length){h4.innerText=title.toString();if(typeof info==="string"&&info.length){h4.appendChild(document.createElement("br"))}}if(typeof info==="string"&&info.length){var small=document.createElement("small");small.innerHTML=info.toString();h4.appendChild(small)}card.appendChild(h4)}if(typeof link==="string"&&link.length){var a=document.createElement("a");a.innerText=typeof linkLabel==="string"&&linkLabel.length?linkLabel:"See more";a.target="_blank";a.href=link.toString();card.appendChild(a)}var column=document.createElement("div");column.className="three columns";column.appendChild(card);return column}function renderCards(cards){var projects=document.querySelector(".projects");var row=null;function addNewRow(){var newRow=document.createElement("div");newRow.className="row";projects.appendChild(newRow);row=newRow}for(var i=0;i<cards.length;i++){setTimeout(function(j){if(j%4===0)addNewRow();row.appendChild(cards[j])},500*i,i)}}document.addEventListener("DOMContentLoaded",function(){var xmlhttp=new XMLHttpRequest;xmlhttp.onreadystatechange=function(){if(this.readyState===4&&this.status===200){if(!this.responseText||!this.responseText.length)return console.error("[Projects] Failed to fetch JSON");try{var projects=JSON.parse(this.responseText)}catch(e){return console.error("[Projects] Failed to parse JSON")}if(!projects)return console.warn("[Projects] Parsed JSON empty");if(!Array.isArray(projects))return console.error("[Projects] Expecting array, got "+typeof projects);var cards=[];for(var i=0;i<projects.length;i++){if(typeof projects[i]!=="object"){console.warn("[Projects] ["+i.toString()+"] Expecting object, got "+typeof projects[i]);continue}cards.push(generateCard(projects[i].image,projects[i].title,projects[i].info,projects[i].link,projects[i].linkLabel))}renderCards(cards)}};xmlhttp.open("GET","projects.json",true);xmlhttp.send()});
//# sourceMappingURL=site.min.js.map